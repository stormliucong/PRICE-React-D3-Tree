name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '**.md'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
        
      - name: Build
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            # Navigate to deployment directory
            cd ${{ secrets.DROPLET_PATH }}
            
            # Pull latest code
            git pull origin main
            
            # Convert repository name to lowercase
            REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
            
            # Stop and remove the old container if it exists
            docker stop $REPO_NAME || true
            docker rm $REPO_NAME || true
            
            # Build and run the new container
            docker build -t $REPO_NAME .
            docker run -d \
              --name $REPO_NAME \
              -p 4833:4833 \
              --restart unless-stopped \
              $REPO_NAME 